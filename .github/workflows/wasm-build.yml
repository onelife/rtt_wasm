# This workflow will build the WebAssembly project

name: Build rtt_wasm

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install scons

    - name: Check cache for emscripten
      id:   cache-emsdk
      uses: actions/cache@v2
      env:
        cache-name: cache-emsdk
      with:
        path: /tmp/emsdk
        key:  ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install emscripten
      if:   steps.cache-emsdk.outputs.cache-hit != 'true'  # Install emscripten if not found in cache
      run:  |
        cd /tmp
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        # Make the "latest" SDK "active" for the current user. (writes .emscripten file)
        ./emsdk activate latest
        # Activate PATH and other environment variables in the current terminal
        source ./emsdk_env.sh
        # Show version
        emcc --version
        emcc --version     

    - name: Check cache for wabt
      id:   cache-wabt
      uses: actions/cache@v2
      env:
        cache-name: cache-wabt
      with:
        path: /tmp/wabt
        key:  ${{ runner.os }}-build-${{ env.cache-name }}
        restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}

    - name: Install wabt
      if:   steps.cache-wabt.outputs.cache-hit != 'true'  # Install wabt if not found in cache
      run:  |
        cd /tmp
        git clone --recursive https://github.com/WebAssembly/wabt
        cd wabt
        mkdir build
        cd build
        cmake ..
        cmake --build .
        
    - name: Build rtt_wasm
      env:
        EMSCRIPTEN_ROOT: /tmp/emsdk/upstream/emscripten
        LC_ALL: C.UTF-8
        LANG: C.UTF-8
      run:  |
        # Add emscripten and wabt to the PATH
        source /tmp/emsdk/emsdk_env.sh
        export PATH=$PATH:/tmp/wabt/build
        # Build code
        python /tmp/emsdk/upstream/emscripten/emscons.py scons

    - name: Show files
      run:  set ; pwd ; ls -l

    - name: Archive outputs
      uses: actions/upload-artifact@v2
      with:
        name: rtt_wasm
        path: |
          dist/*.wasm
          dist/*.js
          dist/*.html
